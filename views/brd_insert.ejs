<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>게시글 작성하기</title>
</head>
<body>
    <!-- 폼태그로 파일 첨부하려면 encoding type 꼭 써줘야 함-->    
    <!-- 파일첨부 1개만 시킬 때 --> 
    <!-- <form id="upload" action="/dbupload" method="post" enctype="multipart/form-data">
        <input type="text" name="title">
        <input type="text" name="author">
        <input id="file" type="file" name="thumbnail">
        <button id="submit" type="submit">게시글 등록 완료</button>
    </form> -->

    <!-- 파일첨부 여러 개 시킬 때 -->
    <form id="upload" action="/dbupload2" method="post" enctype="multipart/form-data">
        <input type="text" name="title" required>
        <!-- required 필수 입력이 필요할 때 처리해주는 속성 -->
        <input type="text" name="author" required>
        <input id="file" type="file" name="thumbnail" multiple>
        <!-- multiple 파일 여러개 동시 첨부할 때 사용 -->
        <button id="submit" type="submit">게시글 등록 완료</button>
    </form>
    <!-- input type="file" 여러 개 사용 시 (응용) -->
    <script> // 함수 정리
        /*
        let test = "exam.ple.File.Name.JPG";
        // indexOf("찾고싶은문자") <- 앞에서부터 찾음
        let result = test.lastIndexOf(".");
        console.log(result, typeof(result)); //결과값은 number
        // lastIndexOf("찾고싶은문자") <-뒤에서부터 찾음
        let chklist = [".jpg", ".jpeg", ".png", ".gif"];
        // 비교할 확장자들 배열 준비
        let result2 =  chklist.includes("얍");
        //  배열명.includes("문자열") <- 배열 안에 있는 문자가 문자열 안에 있는지 찾아줌. 
        console.log(result2); //결과값은 boolean
        //substring(시작번호값(포함되는글자), 끝번호값(불포함))
        // 문자열의 순번은 0부터, 길이값은 1부터 셉니다
        let result3 = test.substring(result, test.length);
        console.log(result3);
        // toLowerCase 소문자로 변경 toUpperCase 대문자로 변경
        let result4 = result3.toLowerCase();
        console.log(result4);
        */
    </script>
    <!-- <script> // 파일 하나만 체크할 때
        const upload = document.querySelector("#upload"); //데이터 전송역할
        const inputFile = document.querySelector("#file"); // 첨부파일 input태그
        const submitBtn = document.querySelector("#submit"); // 전송버튼
        let extCheck = [".jpg", ".jpeg", ".png", ".gif"]; // 체크할 확장자명

        submitBtn.addEventListener("click", (e)=>{
            // input type="file"에는 value 가 아닌 files(단수, 복수 관계없이)
            // console.log(inputFile.files);
            //FileList 라는 배열 형식으로 출력됨. 배열 안에는 파일의 정보가 객체 형식으로 저장되어있음. 단수일때는 0번째.
            let fileName = inputFile.files[0].name; 
            //첨부한 파일명

            let fileLength = fileName.length; 
            // 파일명 길이값(나중에 확장자명 식별할 때 사용)

            let fileDots = fileName.lastIndexOf(".");
            // .기호가 시작하는 순번

            let fileExt = fileName.substring(fileDots, fileLength);
            // 추출한 확장자

            let fileCheck = extCheck.includes(fileExt);
            // 체크할 확장자명 안에 추출한 확장자가 있는지 찾아줌

            // console.log(`파일명은 ${fileName}, 길이는 ${fileLength}, .기호가 시작하는 순번 ${fileDots}, 최종적으로 추출되는 확장자 ${fileExt}, 확장자 있나요? ${fileCheck}`);

            if(fileCheck){ 
                upload.submit(); 
            } 
            else{
                alert("이미지 파일만 첨부 가능합니다");
                e.preventDefault();
            }
        })
    </script> -->
    <script> //파일 여러 개 체크할 때
        const upload = document.querySelector("#upload"); //데이터 전송역할 form태그
        const inputFile = document.querySelector("#file"); // 첨부파일 input태그
        const submitBtn = document.querySelector("#submit"); // 전송버튼
        const extCheck = [".jpg", ".jpeg", ".png", ".gif"]; // 체크할 확장자명

        // 첨부파일이 n개 -> 첨부한 파일 중 하나라도 체크할 확장자명이 아니라면 업로드 막아야 함
        let validRequest = false; // 유효성검사용 변수
        // true일 때 데이터 전송 처리할 역할
        let validCount = 0; //체크 시 이미지 파일인 경우에만 카운트가 1씩 증가

        submitBtn.addEventListener("click", (e)=>{
            
            // 첨부파일 갯수만큼 반복문 처리
            for(let i=0; i< inputFile.files.length; i++){

                let fileName = inputFile.files[i].name; // i번째 파일명 가져오기
                
                let fileLength = fileName.length; // 파일명 길이값(나중에 확장자명 식별할 때 사용)

                let fileDots = fileName.lastIndexOf("."); // .기호가 시작하는 순번

                let fileExts = fileName.substring(fileDots, fileLength); // 추출한 확장자
                
                let fileChange = fileExts.toLowerCase(); // 확장자 소문자로 변경

                let result = extCheck.includes(fileChange); //해당 확장명이 위 배열안에 있는지?

                if(result){
                    validCount++;
                    if(validCount === inputFile.files.length){
                        validRequest = true;
                    }
                }
            }
            if(validRequest){
                // validRequest 값이 true 라면
                upload.submit(); //업로드 기능 수행
            }
            else{
                // validRequest 값이 false 라면
                validCount = 0; //카운트 숫자 초기화
                alert("이미지 파일만 업로드 가능합니다."); // 경고창
                e.preventDefault(); // 업로드 기능막고
            }
        })
    </script>
</body>
</html>